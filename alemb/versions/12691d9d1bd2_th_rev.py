"""th rev

Revision ID: 12691d9d1bd2
Revises: 73f13fcb149c
Create Date: 2023-08-29 18:48:47.928941

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '12691d9d1bd2'
down_revision: Union[str, None] = '73f13fcb149c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('sea_user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('nick_name', sa.String(), nullable=True),
    sa.Column('position', sa.String(), nullable=True),
    sa.Column('experience', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('avatar', sa.String(), nullable=True),
    sa.Column('is_author', sa.Boolean(), nullable=True),
    sa.Column('registred', sa.TIMESTAMP(), nullable=False),
    sa.Column('about', sa.String(), nullable=True),
    sa.Column('head_line', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sea_user_email'), 'sea_user', ['email'], unique=True)
    op.create_index(op.f('ix_sea_user_nick_name'), 'sea_user', ['nick_name'], unique=True)
    op.create_table('calendar',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('calendar_name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['sea_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('faq',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('tech_title', sa.String(), nullable=False),
    sa.Column('category_id', sa.UUID(), nullable=True),
    sa.Column('body_path', sa.String(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), nullable=False),
    sa.Column('draft', sa.Boolean(), nullable=True),
    sa.Column('views', sa.Integer(), nullable=True),
    sa.Column('likes', sa.Integer(), nullable=True),
    sa.Column('dislikes', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['sea_user.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tech_title')
    )
    op.create_table('news',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('tech_title', sa.String(), nullable=False),
    sa.Column('category_id', sa.UUID(), nullable=True),
    sa.Column('body_path', sa.String(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), nullable=False),
    sa.Column('draft', sa.Boolean(), nullable=True),
    sa.Column('views', sa.Integer(), nullable=True),
    sa.Column('likes', sa.Integer(), nullable=True),
    sa.Column('dislikes', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['sea_user.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tech_title')
    )
    op.create_table('post',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('tech_title', sa.String(), nullable=False),
    sa.Column('preview', sa.String(), nullable=False),
    sa.Column('category_id', sa.UUID(), nullable=True),
    sa.Column('body_path', sa.String(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), nullable=False),
    sa.Column('draft', sa.Boolean(), nullable=True),
    sa.Column('cover', sa.String(), nullable=True),
    sa.Column('views', sa.Integer(), nullable=True),
    sa.Column('likes', sa.Integer(), nullable=True),
    sa.Column('dislikes', sa.Integer(), nullable=True),
    sa.Column('comments_counter', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['sea_user.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tech_title')
    )
    op.create_table('tag',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('category_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('Faq_tags',
    sa.Column('faq_id', sa.UUID(), nullable=True),
    sa.Column('tag_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['faq_id'], ['faq.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], )
    )
    op.create_table('News_tags',
    sa.Column('news_id', sa.UUID(), nullable=True),
    sa.Column('tag_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['news_id'], ['news.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], )
    )
    op.create_table('Post_tags',
    sa.Column('post_id', sa.UUID(), nullable=True),
    sa.Column('tag_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], )
    )
    op.create_table('comment',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('post_id', sa.UUID(), nullable=True),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('body', sa.String(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meet',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('calendar_id', sa.UUID(), nullable=True),
    sa.Column('guest_id', sa.UUID(), nullable=True),
    sa.Column('date_of_meet', sa.TIMESTAMP(), nullable=False),
    sa.Column('time_of_meet_start', sa.Time(), nullable=False),
    sa.Column('time_of_meet_end', sa.Time(), nullable=False),
    sa.Column('link_to_Google_Meet', sa.String(), nullable=True),
    sa.Column('meet_title', sa.String(), nullable=True),
    sa.Column('meet_agenda', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['calendar_id'], ['calendar.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('meet')
    op.drop_table('comment')
    op.drop_table('Post_tags')
    op.drop_table('News_tags')
    op.drop_table('Faq_tags')
    op.drop_table('tag')
    op.drop_table('post')
    op.drop_table('news')
    op.drop_table('faq')
    op.drop_table('calendar')
    op.drop_index(op.f('ix_sea_user_nick_name'), table_name='sea_user')
    op.drop_index(op.f('ix_sea_user_email'), table_name='sea_user')
    op.drop_table('sea_user')
    op.drop_table('category')
    # ### end Alembic commands ###
